knitr::opts_chunk$set(echo = TRUE)
loadFile <- function(file) {
data <- read.table(file, header = T)
}
flightDelayData <- loadFile(file = "DelayCorsMatrixData.csv")
#colnames(breastData) <- c("ClumpThickness","UniformityOfCellSize","UniformityOfCellShape","MarginalAdhesion",
#                      "SinglEpithelialCellSize","BareNuclei","BlandChromatin","NormalNucleoli","Mitoses",
#                      "Malignant")
str(flightDelayData)
head(flightDelayData)
summary(flightDelayData)
loadFile <- function(file) {
data <- read.table(file, header = F)
}
flightDelayData <- loadFile(file = "DelayCorsMatrixData.csv")
#colnames(breastData) <- c("ClumpThickness","UniformityOfCellSize","UniformityOfCellShape","MarginalAdhesion",
#                      "SinglEpithelialCellSize","BareNuclei","BlandChromatin","NormalNucleoli","Mitoses",
#                      "Malignant")
str(flightDelayData)
head(flightDelayData)
summary(flightDelayData)
loadFile <- function(file) {
data <- read.table(file, header = T)
}
flightDelayData <- loadFile(file = "DelayCorsMatrixData.csv")
#colnames(breastData) <- c("ClumpThickness","UniformityOfCellSize","UniformityOfCellShape","MarginalAdhesion",
#                      "SinglEpithelialCellSize","BareNuclei","BlandChromatin","NormalNucleoli","Mitoses",
#                      "Malignant")
str(flightDelayData)
head(flightDelayData)
summary(flightDelayData)
loadFile <- function(file) {
data <- read.table(file, header = T, sep = ",")
}
flightDelayData <- loadFile(file = "DelayCorsMatrixData.csv")
#colnames(breastData) <- c("ClumpThickness","UniformityOfCellSize","UniformityOfCellShape","MarginalAdhesion",
#                      "SinglEpithelialCellSize","BareNuclei","BlandChromatin","NormalNucleoli","Mitoses",
#                      "Malignant")
str(flightDelayData)
head(flightDelayData)
summary(flightDelayData)
loadFile <- function(file) {
data <- read.table(file, header = T, sep = ",")
}
flightDelayData <- loadFile(file = "DelayCorsMatrixData.csv")
#colnames(breastData) <- c("ClumpThickness","UniformityOfCellSize","UniformityOfCellShape","MarginalAdhesion",
#                      "SinglEpithelialCellSize","BareNuclei","BlandChromatin","NormalNucleoli","Mitoses",
#                      "Malignant")
str(flightDelayData)
head(flightDelayData)
summary(flightDelayData)
install.packages("corrplot")
res <- flightDelayData[-1]
head(res)
res <- flightDelayData[-1]
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
?corrplot
res <- flightDelayData[-1]
#install.packages("corrplot")
library(corrplot)
#corrplot(res, type = "upper", order = "hclust",
#         tl.col = "black", tl.srt = 45)
corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
#corrplot(res, type = "upper", order = "hclust",
#         tl.col = "black", tl.srt = 45)
corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
#corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 35)
#corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "full", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "full", order = "hclust",
tl.col = "red", tl.srt = 50)
#corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "full", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "full", order = "hclust",
tl.col = "black", tl.srt = 70)
#corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "full", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
res <- flightDelayData[-1]
res <- cor(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
install.packages("Hmisc")
# ++++++++++++++++++++++++++++
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
# install.packages("Hmisc")
res <- cor(flightDelayData[-1])
library(Hmisc)
res2<-rcorr(as.matrix(flightDelayData[-1]))
flattenCorrMatrix(res2$r, res2$P)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
# Insignificant correlation are crossed
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
# Insignificant correlations are leaved blank
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
# Insignificant correlation are crossed
corrplot(res2$r, type="lower", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
# Insignificant correlations are leaved blank
corrplot(res2$r, type="lower", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
install.packages("PerformanceAnalytics")
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=TRUE, pch=19)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=F, pch=19)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=TRUE, pch=19)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=TRUE, pch=19)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=TRUE, pch=19)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=TRUE, pch=19)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=TRUE, pch=20)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=TRUE, pch=2)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=TRUE, pch=1)
loadFile <- function(file) {
data <- read.table(file, header = T, sep = ",")
}
flightDelayData <- loadFile(file = "DelayCorsMatrixData.csv")
str(flightDelayData)
head(flightDelayData)
summary(flightDelayData)
flightDelayData2 <- flightDelayData[-1]
head(flightDelayData2)
loadFile <- function(file) {
data <- read.table(file, header = T, sep = ",")
}
flightDelayData <- loadFile(file = "DelayCorsMatrixData.csv")
str(flightDelayData)
head(flightDelayData)
summary(flightDelayData)
flightDelayData2 <- flightDelayData[-1, 300]
head(flightDelayData2)
loadFile <- function(file) {
data <- read.table(file, header = T, sep = ",")
}
flightDelayData <- loadFile(file = "DelayCorsMatrixData.csv")
str(flightDelayData)
head(flightDelayData)
summary(flightDelayData)
flightDelayDataSubset <- flightDelayData[-1, 100]
head(flightDelayDataSubset)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1, 200], histogram=TRUE, pch=1)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[-1], histogram=TRUE, pch=1)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayDataSubset, histogram=TRUE, pch=1)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[200,-1], histogram=TRUE, pch=1)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[,-1], histogram=TRUE, pch=1)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[1:200,-1], histogram=TRUE, pch=1)
# Get some colors
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = res, col = col, symm = TRUE)
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[1:200,-1], histogram=TRUE, pch=3)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
?colorRampPalette
#install.packages("corrplot")
library(corrplot)
corrplot(res, type = "lower", order = "hclust",
tl.col = "black", tl.srt = 50)
#corrplot(res)
# Get some colors
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = res, col = col, symm = TRUE)
?chart.Correlation
# install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(flightDelayData[1:200,-1], histogram=TRUE, pch=3)
